{
  "reportTitle": "orion-node",
  "stats": {
    "suites": 4,
    "tests": 3,
    "passes": 0,
    "pending": 0,
    "failures": 3,
    "start": "2016-05-12T08:31:14.637Z",
    "end": "2016-05-12T08:31:14.689Z",
    "duration": 52,
    "testsRegistered": 3,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Array",
        "suites": [
          {
            "title": "#indexOf()",
            "suites": [],
            "tests": [
              {
                "title": "should return -1 when the value is not present",
                "fullTitle": "Array #indexOf() should return -1 when the value is not present",
                "timedOut": false,
                "duration": 2,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "<span class=\"hljs-comment\">//assert.equal(-1, [1,2,3].indexOf(5));</span><br><span class=\"hljs-comment\">//assert.equal(-1, [1,2,3].indexOf(0));</span><br>    \tassert.equal(<span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">400</span>);",
                "err": {
                  "name": "AssertionError",
                  "message": "expected 200 to equal 400",
                  "stack": "AssertionError: expected 200 to equal 400<br>    at Context.&lt;anonymous&gt; (test/main.js:11:13)"
                },
                "isRoot": false,
                "uuid": "95c52630-b4f3-4d35-9af0-725062550c44",
                "parentUUID": "5cd2d811-c199-46c7-ad3e-0b5ef17c261e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/main.js",
            "uuid": "5cd2d811-c199-46c7-ad3e-0b5ef17c261e",
            "fullFile": "/home/karambeer/orion-node/test/main.js",
            "passes": [],
            "failures": [
              {
                "title": "should return -1 when the value is not present",
                "fullTitle": "Array #indexOf() should return -1 when the value is not present",
                "timedOut": false,
                "duration": 2,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "<span class=\"hljs-comment\">//assert.equal(-1, [1,2,3].indexOf(5));</span><br><span class=\"hljs-comment\">//assert.equal(-1, [1,2,3].indexOf(0));</span><br>    \tassert.equal(<span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">400</span>);",
                "err": {
                  "name": "AssertionError",
                  "message": "expected 200 to equal 400",
                  "stack": "AssertionError: expected 200 to equal 400<br>    at Context.&lt;anonymous&gt; (test/main.js:11:13)"
                },
                "isRoot": false,
                "uuid": "95c52630-b4f3-4d35-9af0-725062550c44",
                "parentUUID": "5cd2d811-c199-46c7-ad3e-0b5ef17c261e",
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/main.js",
        "uuid": "68844ecf-3f96-4560-aa83-468830f2dabd",
        "fullFile": "/home/karambeer/orion-node/test/main.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Hello World Server",
        "suites": [
          {
            "title": "GET /",
            "suites": [],
            "tests": [
              {
                "title": "returns status code 200",
                "fullTitle": "Hello World Server GET / returns status code 200",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "request.get(base_url,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error,response,body</span>)</span>{<br>\t<span class=\"hljs-comment\">//expect(response.statusCode).toBe(200);</span><br>\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"response code is\"</span>+response.statusCode);<br>\tassert.equal(<span class=\"hljs-number\">200</span>, response.statusCode);<br>\tdone();\t\t<br>});",
                "err": {
                  "name": "TypeError",
                  "message": "Cannot read property 'statusCode' of undefined",
                  "stack": "<span class=\"hljs-built_in\">TypeError</span>: Cannot read property <span class=\"hljs-string\">'statusCode'</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-literal\">undefined</span><br>    at Request._callback (test/test.js:<span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">43</span>)<br>    at self.callback (node_modules/request/request.js:<span class=\"hljs-number\">200</span>:<span class=\"hljs-number\">22</span>)<br>    at Request.onRequestError (node_modules/request/request.js:<span class=\"hljs-number\">831</span>:<span class=\"hljs-number\">8</span>)<br>    at Socket.socketErrorListener (_http_client.js:<span class=\"hljs-number\">295</span>:<span class=\"hljs-number\">9</span>)<br>    at emitErrorNT (net.js:<span class=\"hljs-number\">1250</span>:<span class=\"hljs-number\">8</span>)"
                },
                "isRoot": false,
                "uuid": "10dbf440-7553-4d7e-9ee5-cfaea8f14922",
                "parentUUID": "28760400-cb9c-45fc-bc78-825d0ca40dba",
                "skipped": false
              },
              {
                "title": "returns Hello World",
                "fullTitle": "Hello World Server GET / returns Hello World",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "request.get(base_url, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, response, body</span>) </span>{<br>        <span class=\"hljs-comment\">//expect(body).toBe(\"Hello World\");</span><br>        assert.equal(<span class=\"hljs-string\">\"Hello World\"</span>, body);<br>        <span class=\"hljs-comment\">//helloWorld.closeServer();</span><br>        done();<br>      });",
                "err": {
                  "name": "AssertionError",
                  "message": "'Hello World' == undefined",
                  "stack": "AssertionError: <span class=\"hljs-string\">'Hello World'</span> == <span class=\"hljs-literal\">undefined</span><br>    at Request._callback (test/test.js:<span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">17</span>)<br>    at self.callback (node_modules/request/request.js:<span class=\"hljs-number\">200</span>:<span class=\"hljs-number\">22</span>)<br>    at Request.onRequestError (node_modules/request/request.js:<span class=\"hljs-number\">831</span>:<span class=\"hljs-number\">8</span>)<br>    at Socket.socketErrorListener (_http_client.js:<span class=\"hljs-number\">295</span>:<span class=\"hljs-number\">9</span>)<br>    at emitErrorNT (net.js:<span class=\"hljs-number\">1250</span>:<span class=\"hljs-number\">8</span>)"
                },
                "isRoot": false,
                "uuid": "5e29b943-98c4-43a9-a2ba-152e1d389342",
                "parentUUID": "28760400-cb9c-45fc-bc78-825d0ca40dba",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/test.js",
            "uuid": "28760400-cb9c-45fc-bc78-825d0ca40dba",
            "fullFile": "/home/karambeer/orion-node/test/test.js",
            "passes": [],
            "failures": [
              {
                "title": "returns status code 200",
                "fullTitle": "Hello World Server GET / returns status code 200",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "request.get(base_url,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error,response,body</span>)</span>{<br>\t<span class=\"hljs-comment\">//expect(response.statusCode).toBe(200);</span><br>\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"response code is\"</span>+response.statusCode);<br>\tassert.equal(<span class=\"hljs-number\">200</span>, response.statusCode);<br>\tdone();\t\t<br>});",
                "err": {
                  "name": "TypeError",
                  "message": "Cannot read property 'statusCode' of undefined",
                  "stack": "<span class=\"hljs-built_in\">TypeError</span>: Cannot read property <span class=\"hljs-string\">'statusCode'</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-literal\">undefined</span><br>    at Request._callback (test/test.js:<span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">43</span>)<br>    at self.callback (node_modules/request/request.js:<span class=\"hljs-number\">200</span>:<span class=\"hljs-number\">22</span>)<br>    at Request.onRequestError (node_modules/request/request.js:<span class=\"hljs-number\">831</span>:<span class=\"hljs-number\">8</span>)<br>    at Socket.socketErrorListener (_http_client.js:<span class=\"hljs-number\">295</span>:<span class=\"hljs-number\">9</span>)<br>    at emitErrorNT (net.js:<span class=\"hljs-number\">1250</span>:<span class=\"hljs-number\">8</span>)"
                },
                "isRoot": false,
                "uuid": "10dbf440-7553-4d7e-9ee5-cfaea8f14922",
                "parentUUID": "28760400-cb9c-45fc-bc78-825d0ca40dba",
                "skipped": false
              },
              {
                "title": "returns Hello World",
                "fullTitle": "Hello World Server GET / returns Hello World",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "request.get(base_url, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, response, body</span>) </span>{<br>        <span class=\"hljs-comment\">//expect(body).toBe(\"Hello World\");</span><br>        assert.equal(<span class=\"hljs-string\">\"Hello World\"</span>, body);<br>        <span class=\"hljs-comment\">//helloWorld.closeServer();</span><br>        done();<br>      });",
                "err": {
                  "name": "AssertionError",
                  "message": "'Hello World' == undefined",
                  "stack": "AssertionError: <span class=\"hljs-string\">'Hello World'</span> == <span class=\"hljs-literal\">undefined</span><br>    at Request._callback (test/test.js:<span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">17</span>)<br>    at self.callback (node_modules/request/request.js:<span class=\"hljs-number\">200</span>:<span class=\"hljs-number\">22</span>)<br>    at Request.onRequestError (node_modules/request/request.js:<span class=\"hljs-number\">831</span>:<span class=\"hljs-number\">8</span>)<br>    at Socket.socketErrorListener (_http_client.js:<span class=\"hljs-number\">295</span>:<span class=\"hljs-number\">9</span>)<br>    at emitErrorNT (net.js:<span class=\"hljs-number\">1250</span>:<span class=\"hljs-number\">8</span>)"
                },
                "isRoot": false,
                "uuid": "5e29b943-98c4-43a9-a2ba-152e1d389342",
                "parentUUID": "28760400-cb9c-45fc-bc78-825d0ca40dba",
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 2,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "5337663a-8ecd-4b8d-94f0-d8d19fee0be8",
        "fullFile": "/home/karambeer/orion-node/test/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "d0363ca1-b864-4fd4-aaf6-18ff8a0996a0",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return -1 when the value is not present",
      "fullTitle": "#indexOf() should return -1 when the value is not present",
      "timedOut": false,
      "duration": 2,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "<span class=\"hljs-comment\">//assert.equal(-1, [1,2,3].indexOf(5));</span><br><span class=\"hljs-comment\">//assert.equal(-1, [1,2,3].indexOf(0));</span><br>    \tassert.equal(<span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">400</span>);",
      "err": {
        "name": "AssertionError",
        "message": "expected 200 to equal 400",
        "stack": "AssertionError: expected 200 to equal 400<br>    at Context.&lt;anonymous&gt; (test/main.js:11:13)"
      },
      "isRoot": false,
      "uuid": "1c0c21e3-6fb8-4ddf-8267-153704e3df33",
      "parentUUID": "5cd2d811-c199-46c7-ad3e-0b5ef17c261e",
      "skipped": false
    },
    {
      "title": "returns status code 200",
      "fullTitle": "GET / returns status code 200",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "request.get(base_url,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error,response,body</span>)</span>{<br>\t<span class=\"hljs-comment\">//expect(response.statusCode).toBe(200);</span><br>\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"response code is\"</span>+response.statusCode);<br>\tassert.equal(<span class=\"hljs-number\">200</span>, response.statusCode);<br>\tdone();\t\t<br>});",
      "err": {
        "name": "TypeError",
        "message": "Cannot read property 'statusCode' of undefined",
        "stack": "<span class=\"hljs-built_in\">TypeError</span>: Cannot read property <span class=\"hljs-string\">'statusCode'</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-literal\">undefined</span><br>    at Request._callback (test/test.js:<span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">43</span>)<br>    at self.callback (node_modules/request/request.js:<span class=\"hljs-number\">200</span>:<span class=\"hljs-number\">22</span>)<br>    at Request.onRequestError (node_modules/request/request.js:<span class=\"hljs-number\">831</span>:<span class=\"hljs-number\">8</span>)<br>    at Socket.socketErrorListener (_http_client.js:<span class=\"hljs-number\">295</span>:<span class=\"hljs-number\">9</span>)<br>    at emitErrorNT (net.js:<span class=\"hljs-number\">1250</span>:<span class=\"hljs-number\">8</span>)"
      },
      "isRoot": false,
      "uuid": "caffd6de-ed39-44ce-affb-9e54d680a6c1",
      "parentUUID": "28760400-cb9c-45fc-bc78-825d0ca40dba",
      "skipped": false
    },
    {
      "title": "returns Hello World",
      "fullTitle": "GET / returns Hello World",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "request.get(base_url, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, response, body</span>) </span>{<br>        <span class=\"hljs-comment\">//expect(body).toBe(\"Hello World\");</span><br>        assert.equal(<span class=\"hljs-string\">\"Hello World\"</span>, body);<br>        <span class=\"hljs-comment\">//helloWorld.closeServer();</span><br>        done();<br>      });",
      "err": {
        "name": "AssertionError",
        "message": "'Hello World' == undefined",
        "stack": "AssertionError: <span class=\"hljs-string\">'Hello World'</span> == <span class=\"hljs-literal\">undefined</span><br>    at Request._callback (test/test.js:<span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">17</span>)<br>    at self.callback (node_modules/request/request.js:<span class=\"hljs-number\">200</span>:<span class=\"hljs-number\">22</span>)<br>    at Request.onRequestError (node_modules/request/request.js:<span class=\"hljs-number\">831</span>:<span class=\"hljs-number\">8</span>)<br>    at Socket.socketErrorListener (_http_client.js:<span class=\"hljs-number\">295</span>:<span class=\"hljs-number\">9</span>)<br>    at emitErrorNT (net.js:<span class=\"hljs-number\">1250</span>:<span class=\"hljs-number\">8</span>)"
      },
      "isRoot": false,
      "uuid": "aa964bcb-caea-4796-9cba-f6bba651e8f2",
      "parentUUID": "28760400-cb9c-45fc-bc78-825d0ca40dba",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [],
  "allFailures": [
    {
      "title": "should return -1 when the value is not present",
      "fullTitle": "#indexOf() should return -1 when the value is not present",
      "timedOut": false,
      "duration": 2,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "<span class=\"hljs-comment\">//assert.equal(-1, [1,2,3].indexOf(5));</span><br><span class=\"hljs-comment\">//assert.equal(-1, [1,2,3].indexOf(0));</span><br>    \tassert.equal(<span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">400</span>);",
      "err": {
        "name": "AssertionError",
        "message": "expected 200 to equal 400",
        "stack": "AssertionError: expected 200 to equal 400<br>    at Context.&lt;anonymous&gt; (test/main.js:11:13)"
      },
      "isRoot": false,
      "uuid": "3b318988-b485-4d86-8d50-5b1c0d48bd92",
      "parentUUID": "5cd2d811-c199-46c7-ad3e-0b5ef17c261e",
      "skipped": false
    },
    {
      "title": "returns status code 200",
      "fullTitle": "GET / returns status code 200",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "request.get(base_url,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error,response,body</span>)</span>{<br>\t<span class=\"hljs-comment\">//expect(response.statusCode).toBe(200);</span><br>\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"response code is\"</span>+response.statusCode);<br>\tassert.equal(<span class=\"hljs-number\">200</span>, response.statusCode);<br>\tdone();\t\t<br>});",
      "err": {
        "name": "TypeError",
        "message": "Cannot read property 'statusCode' of undefined",
        "stack": "<span class=\"hljs-built_in\">TypeError</span>: Cannot read property <span class=\"hljs-string\">'statusCode'</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-literal\">undefined</span><br>    at Request._callback (test/test.js:<span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">43</span>)<br>    at self.callback (node_modules/request/request.js:<span class=\"hljs-number\">200</span>:<span class=\"hljs-number\">22</span>)<br>    at Request.onRequestError (node_modules/request/request.js:<span class=\"hljs-number\">831</span>:<span class=\"hljs-number\">8</span>)<br>    at Socket.socketErrorListener (_http_client.js:<span class=\"hljs-number\">295</span>:<span class=\"hljs-number\">9</span>)<br>    at emitErrorNT (net.js:<span class=\"hljs-number\">1250</span>:<span class=\"hljs-number\">8</span>)"
      },
      "isRoot": false,
      "uuid": "a7ae0c78-54d2-4885-a653-f0bc9022091a",
      "parentUUID": "28760400-cb9c-45fc-bc78-825d0ca40dba",
      "skipped": false
    },
    {
      "title": "returns Hello World",
      "fullTitle": "GET / returns Hello World",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "request.get(base_url, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, response, body</span>) </span>{<br>        <span class=\"hljs-comment\">//expect(body).toBe(\"Hello World\");</span><br>        assert.equal(<span class=\"hljs-string\">\"Hello World\"</span>, body);<br>        <span class=\"hljs-comment\">//helloWorld.closeServer();</span><br>        done();<br>      });",
      "err": {
        "name": "AssertionError",
        "message": "'Hello World' == undefined",
        "stack": "AssertionError: <span class=\"hljs-string\">'Hello World'</span> == <span class=\"hljs-literal\">undefined</span><br>    at Request._callback (test/test.js:<span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">17</span>)<br>    at self.callback (node_modules/request/request.js:<span class=\"hljs-number\">200</span>:<span class=\"hljs-number\">22</span>)<br>    at Request.onRequestError (node_modules/request/request.js:<span class=\"hljs-number\">831</span>:<span class=\"hljs-number\">8</span>)<br>    at Socket.socketErrorListener (_http_client.js:<span class=\"hljs-number\">295</span>:<span class=\"hljs-number\">9</span>)<br>    at emitErrorNT (net.js:<span class=\"hljs-number\">1250</span>:<span class=\"hljs-number\">8</span>)"
      },
      "isRoot": false,
      "uuid": "67b0da38-5f81-4e04-9785-6bc3695f306a",
      "parentUUID": "28760400-cb9c-45fc-bc78-825d0ca40dba",
      "skipped": false
    }
  ],
  "copyrightYear": 2016
}